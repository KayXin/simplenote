<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyu.modules.biz.article.dao.ArticleCommentDao">
    <sql id="Base_Column_List">
        a.id as id,
        a.article_id as articleId,
        a.num as num,
        a.author_id as
        authorId,
        a.parent_id as parentId,
        a.parent_replyer_id as
        parentReplyerId,
        a.content as content,
        a.replyer_id as
        replyerId,
        a.create_date as createDate
    </sql>

    <select id="getForUpdate"
        parameterType="com.xiaoyu.modules.biz.article.entity.ArticleComment"
        resultType="com.xiaoyu.modules.biz.article.entity.ArticleComment">
        select * from biz_article_comment
        where
        id=#{id}
        for update
    </select>
    <!-- 分页查询信息 -->
    <select id="findByList"
        resultType="com.xiaoyu.modules.biz.article.entity.ArticleComment"
        parameterType="com.xiaoyu.modules.biz.article.entity.ArticleComment">
        select
        <include refid="Base_Column_List" />
        from biz_article_comment as a where a.del_flag=0
    </select>
    <select id="findNewComments"
        resultType="com.xiaoyu.modules.biz.article.vo.ArticleCommentVo"
        parameterType="java.lang.String">
        SELECT
        a.id AS id,
        a.article_id AS articleId,
        a.num as num,
        a.author_id
        AS authorId,
        a.parent_id AS parentId,
        u1.nickname AS
        parentReplyerName,
        a.parent_replyer_id AS parentReplyerId,
        a.content AS
        content,
        a.replyer_id AS replyerId,
        u.nickname AS replyerName,
        u.avatar
        AS
        replyerAvatar,
        a.create_date AS createDate
        FROM
        biz_article_comment AS
        a
        LEFT JOIN biz_user AS u ON a.replyer_id = u.id
        LEFT JOIN
        biz_article_comment AS a1 ON a.parent_id = a.id
        LEFT JOIN biz_user AS
        u1 ON a.parent_replyer_id = u1.id
        WHERE
        a.del_flag = 0 and a.article_id
        =
        #{articleId}
        order by a.create_date desc
        LIMIT 5

    </select>
    <select id="findList"
        resultType="com.xiaoyu.modules.biz.article.vo.ArticleCommentVo"
        parameterType="java.lang.String">
        SELECT
        a.id AS id,
        a.article_id AS articleId,
        a.author_id
        AS authorId,
        a.num as num,
        a.parent_id AS parentId,
        u1.nickname AS
        parentReplyerName,
        a.parent_replyer_id AS parentReplyerId,
        a.content AS
        content,
        a.replyer_id AS replyerId,
        u.nickname AS replyerName,
        u.avatar
        AS
        replyerAvatar,
        a.create_date AS createDate
        FROM
        biz_article_comment AS
        a
        LEFT JOIN biz_user AS u ON a.replyer_id = u.id
        LEFT JOIN
        biz_article_comment AS a1 ON a.parent_id = a.id
        LEFT JOIN biz_user AS
        u1 ON a.parent_replyer_id = u1.id
        WHERE
        a.del_flag = 0 and a.article_id
        =
        #{articleId}
        order by a.create_date desc
    </select>

    <delete id="delete"
        parameterType="com.xiaoyu.modules.biz.article.entity.ArticleComment">
        update biz_article_comment set
        del_flag=1
        where id = #{id}
    </delete>

    <insert id="insert"
        parameterType="com.xiaoyu.modules.biz.article.entity.ArticleComment">
        insert into biz_article_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="replyerId != null">
                replyer_id,
            </if>
            <if test="parentReplyerId != null">
                parent_replyer_id,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="articleId != null">
                #{articleId},
            </if>
            <if test="authorId != null">
                #{authorId},
            </if>
            <if test="parentId != null">
                #{parentId},
            </if>
            <if test="content != null">
                #{content},
            </if>
            <if test="replyerId != null">
                #{replyerId},
            </if>
            <if test="parentReplyerId != null">
                #{parentReplyerId},
            </if>
        </trim>
    </insert>
    <update id="update"
        parameterType="com.xiaoyu.modules.biz.article.entity.ArticleComment">
        update biz_article_comment
        set
        num = #{num}
        where
        id = #{id}
    </update>
    <!--评论点赞相关 -->

    <select id="getLike"
        parameterType="com.xiaoyu.modules.biz.article.entity.CommentLike"
        resultType="com.xiaoyu.modules.biz.article.entity.CommentLike">
        select * from biz_article_comment_like
        where
        comment_id=#{commentId}
        and user_id = #{userId}
    </select>
    <select id="getLikeForUpdate"
        parameterType="com.xiaoyu.modules.biz.article.entity.CommentLike"
        resultType="com.xiaoyu.modules.biz.article.entity.CommentLike">
        select * from biz_article_comment_like
        where
        comment_id=#{commentId}
        and user_id = #{userId}
        for update
    </select>
    <select id="isLiked"
        parameterType="com.xiaoyu.modules.biz.article.entity.CommentLike"
        resultType="java.lang.Integer">
        select count(*) from
        biz_article_comment_like
        where
        comment_id=#{commentId}
        and user_id
        =
        #{userId}
    </select>
    <update id="updateLike"
        parameterType="com.xiaoyu.modules.biz.article.entity.CommentLike">
        update
        biz_article_comment_like
        set
        status = #{status}
        where
        comment_id=#{commentId} and user_id
        =#{userId}
    </update>

    <insert id="insertLike"
        parameterType="com.xiaoyu.modules.biz.article.entity.CommentLike">
        insert into biz_article_comment_like
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="status!= null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="status!= null">
                #{status},
            </if>
        </trim>
    </insert>

</mapper>